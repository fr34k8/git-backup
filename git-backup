#!/bin/bash
MIRROR_ROOT=$DEST_ROOT/mirror
START_DIR=$PWD
canonicalize () {
	#Note:I want relative path be resolved but not symbol link
	#This should work most time
	if [[ $1 =~ ^/ ]] ; then
		echo $1
	else
		echo $START_DIR/$1
	fi
}
mkdir_cp () {
	local DIR=$(dirname $1)
	[[ -d $MIRROR_ROOT/$DIR ]] || mkdir -p $MIRROR_ROOT/$DIR
	cp -p $1 $MIRROR_ROOT/$DIR
}
list_files () {
	git ls-files|grep "^mirror"|sed "s/^mirror//"
}
print_meta_data () {
	stat -c "%n %U %G %a" $(list_files)
}
init () {
	git init
	mkdir mirror
	touch meta
	touch THIS_IS_A_GIT_BACKUP_REPO
	git add meta
	git add THIS_IS_A_GIT_BACKUP_REPO
	git commit -m "init"
}
add () {
	local file=$(canonicalize $1)
	[[ -f $file ]] || { echo "No such file"; return 1; }
	[[ -f $MIRROR_ROOT/$file ]] && { echo "file already added";return 2; }
	mkdir_cp $file
	git add $MIRROR_ROOT/$file
}
update () {
	rsync -av --files-from=<(list_files) / $MIRROR_ROOT
	print_meta_data > meta
}
restore () {
	rsync -av --files-from=<(list_files) $MIRROR_ROOT /
}
rm () {
	local file=$(canonicalize $1)
	[[ -f $MIRROR_ROOT/$file ]] || { echo "file not added"; return 1; }
	git rm -f $MIRROR_ROOT/$file
}
commit () {
	update
	git commit -a
}
cd $DEST_ROOT || { echo DEST_ROOT not exists; exit 255; }
[[ ! -f THIS_IS_A_GIT_BACKUP_REPO && "$1" != "init" ]] && { echo not a git backup repo; exit 255; }
case $1 in
	init) init
		;;
	add) add $2
		;;
	rm) rm $2
		;;
	update) update
		;;
	commit) commit
		;;
	ls) list_files
		;;
	ll) update
		cat meta
		;;
	*)
		git $*
esac
